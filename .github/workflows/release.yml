name: Release Extension

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Read current version from package.json
      run: |
        echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

    - name: Check if version changed on this push
      if: github.event_name == 'push'
      run: |
        PREV_SHA=${{ github.event.before }}
        PREV_VERSION=""
        if git cat-file -e "$PREV_SHA^{commit}" 2>/dev/null; then
          PREV_VERSION=$(git show "$PREV_SHA:package.json" 2>/dev/null | jq -r '.version' || echo "")
        fi
        echo "Previous version: $PREV_VERSION"
        echo "Current version:  $NEW_VERSION"
        if [ "$NEW_VERSION" = "$PREV_VERSION" ]; then
          echo "VERSION_CHANGED=false" >> $GITHUB_ENV
        else
          echo "VERSION_CHANGED=true" >> $GITHUB_ENV
        fi

    - name: Build extension
      run: npm run vscode:prepublish

    - name: Package extension
      run: npm run package

    - name: Publish to VS Code Marketplace
      if: env.VERSION_CHANGED == 'true' || github.event_name == 'workflow_dispatch'
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
      run: |
        if [ -n "$VSCE_PAT" ]; then
          npx vsce publish --pat $VSCE_PAT
        else
          echo "VSCE_PAT not set, skipping marketplace publish"
        fi

    - name: Publish to Open VSX Registry
      if: env.VERSION_CHANGED == 'true' || github.event_name == 'workflow_dispatch'
      env:
        OVSX_PAT: ${{ secrets.OVSX_PAT }}
      run: |
        if [ -n "$OVSX_PAT" ]; then
          npx ovsx publish *.vsix -p "$OVSX_PAT"
        else
          echo "OVSX_PAT not set, skipping Open VSX publish"
        fi
